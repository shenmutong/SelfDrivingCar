* Project 1 fillPoly
** Color Selection
** Region Masked
** Canny Edge Detection
  灰度 Convert to grayscale
  梯度 Compute the gradient 可以更好的寻找边缘
  标识边缘  edges = cv2.Canny(gray,low_threshold,high_threshold)
#+BEGINSRC Python
#doing all the relevant imports
import matplotlib.pyplot as plt
import matplotlib.image as mpimg
import numpy as np
import cv2

# Read in the image and convert to grayscale
image = mpimg.imread('mountain_road.jpg')
gray = cv2.cvtColor(image, cv2.COLOR_RGB2GRAY)

# Define a kernel size for Gaussian smoothing / blurring
kernel_size = 3
blur_gray = cv2.GaussianBlur(gray,(kernel_size, kernel_size), 0)

# Define parameters for Canny and run it
# NOTE: if you try running this code you might want to change these!
low_threshold = 1
high_threshold = 10
edges = cv2.Canny(blur_gray, low_threshold, high_threshold)

# Display the image
plt.imshow(edges, cmap='Greys_r')

#+END_SRC
** Hough Transform
